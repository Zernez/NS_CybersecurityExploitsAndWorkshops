#!/usr/bin/python3
from scapy.all import *
from Crypto.Cipher import AES
from Crypto.Util.Padding import pad, unpad
from secret_data import encryption_key

def decrypt(ciphertext: bytes) -> bytes:
    """Decrypt a ciphertext using our encryption key."""
    # the IV is stored in the first 16 B of the ciphertext
    iv = ciphertext[:16]
    aes = AES.new(encryption_key, AES.MODE_CBC, iv=iv)
    # decrypt the ciphertext
    plaintext = aes.decrypt(ciphertext[16:])
    # remove the padding of the plaintext
    message = unpad(plaintext, 16)
    return message

print("Listening for incoming packets...")

while(True):
    pkt = sniff(filter='icmp', count=1)
    print("Incoming bytes: ")
    print(pkt[0].load)
    print("Decrypted message: ")
    print(decrypt(pkt[0].load).decode())